# THIS FILE IS AUTOMATICALLY GENERATED.
# Disclaimer: Please test this file before using in production.
"""
Generated blueprint DSL (.py)
"""

from calm.dsl.builtins import *  # no_qa

# Secret Variables
BP_CRED_Creds_Centos_PASSWORD = read_local_file("BP_CRED_Creds_Centos_PASSWORD")
BP_CRED_Creds_PrismCentral_PASSWORD = read_local_file(
    "BP_CRED_Creds_PrismCentral_PASSWORD"
)

# Credentials
BP_CRED_Creds_Centos = basic_cred(
    "root",
    BP_CRED_Creds_Centos_PASSWORD,
    name="Creds_Centos",
    type="PASSWORD",
    default=True,
)
BP_CRED_Creds_PrismCentral = basic_cred(
    "api",
    BP_CRED_Creds_PrismCentral_PASSWORD,
    name="Creds_PrismCentral",
    type="PASSWORD",
)


Centos7 = vm_disk_package(
    name="Centos7",
    description="",
    config={
        "image": {
            "name": "Centos 7",
            "type": "DISK_IMAGE",
            "source": "https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2",
            "architecture": "X86_64",
        },
        "product": {"name": "Centos", "version": "7"},
        "checksum": {},
    },
)


class Centos(Service):
    """Centos Service description"""

    @action
    def __create__():
        """System action for creating an application"""

        CalmTask.Exec.escript(
            name="Add to Protection Domain",
            filename="scripts/Service_Centos_Action___create___Task_AddtoProtectionDomain.py",
            target=ref(Centos),
        )

    @action
    def __delete__():
        """System action for deleting an application. Deletes created VMs as well"""

        CalmTask.Exec.escript(
            name="Remove Protection Domain",
            filename="scripts/Service_Centos_Action___delete___Task_RemoveProtectionDomain.py",
            target=ref(Centos),
        )


class VM(Substrate):
    """VM Substrate description"""

    os_type = "Linux"
    provider_type = "AHV_VM"
    provider_spec = read_ahv_spec(
        "specs/VM_provider_spec.yaml", disk_packages={1: Centos7}
    )
    readiness_probe = {
        "connection_type": "SSH",
        "connection_port": 22,
        "connection_protocol": "",
        "timeout_secs": "",
        "delay_secs": "60",
        "retries": "5",
        "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@",
        "disabled": False,
    }
    readiness_probe["credential"] = ref(BP_CRED_Creds_Centos)


class Package1(Package):
    """Package1 Package description"""

    services = [ref(Centos)]


class c9c0e529_deployment(Deployment):
    """c9c0e529_deployment Deployment description"""

    min_replicas = "1"
    max_replicas = "1"

    packages = [ref(Package1)]
    substrate = ref(VM)


class Nutanix(Profile):
    """Nutanix Profile description"""

    deployments = [c9c0e529_deployment]

    BackupType = CalmVariable.WithOptions(
        [
            "Local - 24 hour retention",
            "Basic - 7 days local, 7 days remote",
            "Standard - 7 days local, 14 days remote",
        ],
        label="Backup Level",
        default="Local - 24 hour retention",
        is_mandatory=True,
        is_hidden=False,
        runtime=True,
    )

    remote_protection_domain_cluster = CalmVariable.Simple(
        "Tinkerbell-3", label="", is_mandatory=False, is_hidden=True, runtime=False
    )

    @action
    def CreateVMSnapshot(display_name="Create VM Snapshot"):
        """CreateVMSnapshot Action description"""

        CalmTask.Exec.escript(
            name="Create Snapshot",
            filename="scripts/Profile_Nutanix_Action_CreateVMSnapshot_Task_CreateSnapshot.py",
            target=ref(Centos),
        )

    @action
    def ListVMSnapshots(display_name="List VM Snapshots"):
        """ListVMSnapshots Action description"""

        CalmTask.Exec.escript(
            name="List Snapshot",
            filename="scripts/Profile_Nutanix_Action_ListVMSnapshots_Task_ListSnapshot.py",
            target=ref(Centos),
        )

    @action
    def RestoreLastVMSnapshot(display_name="Restore Last VM Snapshot"):
        """RestoreLastVMSnapshot Action description"""

        CalmTask.Exec.escript(
            name="Restore Last Snapshot",
            filename="scripts/Profile_Nutanix_Action_RestoreLastVMSnapshot_Task_RestoreLastSnapshot.py",
            target=ref(Centos),
        )


class ProtectionDomains(Blueprint):
    """This blueprint demonstrates Protection Domains with user-selectable remote retention policies. 

Day 2 Actions:
- Create Snapshot
- List Snapshots
- Restore Last Snapshot

Requirements and Assumptions:
- Source and Target clusters are registered to the same Prism Central.
- API user is configured on Prism Central.
- Remote Site has been configured and tested on Source and Target.
- Remote Site name should equal the target cluster name.

Configuration:

- Edit the 'remote_protection_domain_cluster' Application Profile variable.
- Populate the correct credentials for the Prism Central API.
- Populate the correct credentials for the user VM."""

    services = [Centos]
    packages = [Package1, Centos7]
    substrates = [VM]
    profiles = [Nutanix]
    credentials = [BP_CRED_Creds_Centos, BP_CRED_Creds_PrismCentral]
